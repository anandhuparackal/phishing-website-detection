{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6c764144",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:41.947016Z",
     "iopub.status.busy": "2025-04-18T17:17:41.946569Z",
     "iopub.status.idle": "2025-04-18T17:17:42.569076Z",
     "shell.execute_reply": "2025-04-18T17:17:42.567882Z"
    },
    "papermill": {
     "duration": 0.633135,
     "end_time": "2025-04-18T17:17:42.570975",
     "exception": false,
     "start_time": "2025-04-18T17:17:41.937840",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data source import complete.\n"
     ]
    }
   ],
   "source": [
    "import kagglehub\n",
    "taruntiwarihp_phishing_site_urls_path = kagglehub.dataset_download('taruntiwarihp/phishing-site-urls')\n",
    "\n",
    "print('Data source import complete.')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6f2a8af1",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:42.593744Z",
     "iopub.status.busy": "2025-04-18T17:17:42.593296Z",
     "iopub.status.idle": "2025-04-18T17:17:44.830049Z",
     "shell.execute_reply": "2025-04-18T17:17:44.828947Z"
    },
    "papermill": {
     "duration": 2.248554,
     "end_time": "2025-04-18T17:17:44.831882",
     "exception": false,
     "start_time": "2025-04-18T17:17:42.583328",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/phishing-site-urls/phishing_site_urls.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4589bfd6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:44.846727Z",
     "iopub.status.busy": "2025-04-18T17:17:44.846242Z",
     "iopub.status.idle": "2025-04-18T17:17:46.269193Z",
     "shell.execute_reply": "2025-04-18T17:17:46.267875Z"
    },
    "papermill": {
     "duration": 1.432504,
     "end_time": "2025-04-18T17:17:46.271010",
     "exception": false,
     "start_time": "2025-04-18T17:17:44.838506",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataset = pd.read_csv(\"/kaggle/input/phishing-site-urls/phishing_site_urls.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "77aecfc2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.286468Z",
     "iopub.status.busy": "2025-04-18T17:17:46.286138Z",
     "iopub.status.idle": "2025-04-18T17:17:46.313485Z",
     "shell.execute_reply": "2025-04-18T17:17:46.312725Z"
    },
    "papermill": {
     "duration": 0.037301,
     "end_time": "2025-04-18T17:17:46.315113",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.277812",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 URL Label\n",
       "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad\n",
       "1  www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...   bad\n",
       "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad\n",
       "3  mail.printakid.com/www.online.americanexpress....   bad\n",
       "4  thewhiskeydregs.com/wp-content/themes/widescre...   bad"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cf5bb62e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.330723Z",
     "iopub.status.busy": "2025-04-18T17:17:46.330388Z",
     "iopub.status.idle": "2025-04-18T17:17:46.339239Z",
     "shell.execute_reply": "2025-04-18T17:17:46.338123Z"
    },
    "papermill": {
     "duration": 0.018737,
     "end_time": "2025-04-18T17:17:46.341272",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.322535",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       URL Label\n",
       "549341     23.227.196.215/   bad\n",
       "549342  apple-checker.org/   bad\n",
       "549343   apple-iclods.org/   bad\n",
       "549344  apple-uptoday.org/   bad\n",
       "549345   apple-search.info   bad"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8631147d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.356504Z",
     "iopub.status.busy": "2025-04-18T17:17:46.356219Z",
     "iopub.status.idle": "2025-04-18T17:17:46.361770Z",
     "shell.execute_reply": "2025-04-18T17:17:46.360769Z"
    },
    "papermill": {
     "duration": 0.015538,
     "end_time": "2025-04-18T17:17:46.363835",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.348297",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset shape: (549346, 2)\n"
     ]
    }
   ],
   "source": [
    "print(\"Dataset shape:\", dataset.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "1bc45f29",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.378661Z",
     "iopub.status.busy": "2025-04-18T17:17:46.378309Z",
     "iopub.status.idle": "2025-04-18T17:17:46.386483Z",
     "shell.execute_reply": "2025-04-18T17:17:46.385503Z"
    },
    "papermill": {
     "duration": 0.017679,
     "end_time": "2025-04-18T17:17:46.388317",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.370638",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['URL', 'Label'], dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2a9e3ae3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.406580Z",
     "iopub.status.busy": "2025-04-18T17:17:46.405947Z",
     "iopub.status.idle": "2025-04-18T17:17:46.479514Z",
     "shell.execute_reply": "2025-04-18T17:17:46.478552Z"
    },
    "papermill": {
     "duration": 0.084209,
     "end_time": "2025-04-18T17:17:46.481331",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.397122",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "URL      0\n",
       "Label    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8a79c1e",
   "metadata": {
    "papermill": {
     "duration": 0.006627,
     "end_time": "2025-04-18T17:17:46.495002",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.488375",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data preprocessing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a3113d67",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:46.511295Z",
     "iopub.status.busy": "2025-04-18T17:17:46.510974Z",
     "iopub.status.idle": "2025-04-18T17:17:48.900707Z",
     "shell.execute_reply": "2025-04-18T17:17:48.898584Z"
    },
    "papermill": {
     "duration": 2.402026,
     "end_time": "2025-04-18T17:17:48.903773",
     "exception": false,
     "start_time": "2025-04-18T17:17:46.501747",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class distribution:\n",
      " class_url\n",
      "1    392924\n",
      "0    156422\n",
      "Name: count, dtype: int64\n",
      "\n",
      "Top repeated URLs:\n",
      " URL\n",
      "jhomitevd2abj3fk.tor2web.org/    52\n",
      "jhomitevd2abj3fk.onion.to/       52\n",
      "zjfq4lnfbs7pncr5.onion.to/       44\n",
      "zjfq4lnfbs7pncr5.tor2web.org/    44\n",
      "5n7y4yihirccftc5.tor2web.org/    42\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# Encode the 'Label' column into integers\n",
    "label_encoder = LabelEncoder()\n",
    "dataset['class_url'] = label_encoder.fit_transform(dataset['Label'])\n",
    "\n",
    "# Display the distribution of encoded classes\n",
    "print(\"Class distribution:\\n\", dataset['class_url'].value_counts())\n",
    "\n",
    "# Display the most frequent URLs\n",
    "print(\"\\nTop repeated URLs:\\n\", dataset['URL'].value_counts().head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7ef091a2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:48.919601Z",
     "iopub.status.busy": "2025-04-18T17:17:48.919088Z",
     "iopub.status.idle": "2025-04-18T17:17:48.935191Z",
     "shell.execute_reply": "2025-04-18T17:17:48.934269Z"
    },
    "papermill": {
     "duration": 0.025791,
     "end_time": "2025-04-18T17:17:48.936867",
     "exception": false,
     "start_time": "2025-04-18T17:17:48.911076",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0\n",
       "1       www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...   bad          0\n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0\n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0\n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0\n",
       "...                                                   ...   ...        ...\n",
       "549341                                    23.227.196.215/   bad          0\n",
       "549342                                 apple-checker.org/   bad          0\n",
       "549343                                  apple-iclods.org/   bad          0\n",
       "549344                                 apple-uptoday.org/   bad          0\n",
       "549345                                  apple-search.info   bad          0\n",
       "\n",
       "[549346 rows x 3 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "93dba2cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:48.953609Z",
     "iopub.status.busy": "2025-04-18T17:17:48.952657Z",
     "iopub.status.idle": "2025-04-18T17:17:49.288136Z",
     "shell.execute_reply": "2025-04-18T17:17:49.287009Z"
    },
    "papermill": {
     "duration": 0.345664,
     "end_time": "2025-04-18T17:17:49.289815",
     "exception": false,
     "start_time": "2025-04-18T17:17:48.944151",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                      URL Label  class_url\n",
      "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0\n",
      "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0\n",
      "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0\n",
      "3       mail.printakid.com/www.online.americanexpress....   bad          0\n",
      "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0\n",
      "...                                                   ...   ...        ...\n",
      "549341                                    23.227.196.215/   bad          0\n",
      "549342                                 apple-checker.org/   bad          0\n",
      "549343                                  apple-iclods.org/   bad          0\n",
      "549344                                 apple-uptoday.org/   bad          0\n",
      "549345                                  apple-search.info   bad          0\n",
      "\n",
      "[549346 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "# Remove 'www.' from URLs\n",
    "dataset['URL'] = dataset['URL'].str.replace(r'^www\\.', '', regex=True)\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d6dbb5a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:49.306464Z",
     "iopub.status.busy": "2025-04-18T17:17:49.306139Z",
     "iopub.status.idle": "2025-04-18T17:17:49.534121Z",
     "shell.execute_reply": "2025-04-18T17:17:49.533048Z"
    },
    "papermill": {
     "duration": 0.238385,
     "end_time": "2025-04-18T17:17:49.535601",
     "exception": false,
     "start_time": "2025-04-18T17:17:49.297216",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  \n",
       "0           225  \n",
       "1            77  \n",
       "2           177  \n",
       "3            60  \n",
       "4           116  \n",
       "...         ...  \n",
       "549341       15  \n",
       "549342       18  \n",
       "549343       17  \n",
       "549344       18  \n",
       "549345       17  \n",
       "\n",
       "[549346 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a feature for URL length\n",
    "dataset['url_len'] = dataset['URL'].apply(lambda x: len(str(x)))\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "52b8275a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:49.552751Z",
     "iopub.status.busy": "2025-04-18T17:17:49.552384Z",
     "iopub.status.idle": "2025-04-18T17:17:55.057905Z",
     "shell.execute_reply": "2025-04-18T17:17:55.056664Z"
    },
    "papermill": {
     "duration": 5.516722,
     "end_time": "2025-04-18T17:17:55.059820",
     "exception": false,
     "start_time": "2025-04-18T17:17:49.543098",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting tld\r\n",
      "  Downloading tld-0.13-py2.py3-none-any.whl.metadata (9.4 kB)\r\n",
      "Downloading tld-0.13-py2.py3-none-any.whl (263 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m263.8/263.8 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: tld\r\n",
      "Successfully installed tld-0.13\r\n"
     ]
    }
   ],
   "source": [
    "!pip install tld"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "42594e36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:55.078388Z",
     "iopub.status.busy": "2025-04-18T17:17:55.077954Z",
     "iopub.status.idle": "2025-04-18T17:17:57.393253Z",
     "shell.execute_reply": "2025-04-18T17:17:57.392375Z"
    },
    "papermill": {
     "duration": 2.326643,
     "end_time": "2025-04-18T17:17:57.394808",
     "exception": false,
     "start_time": "2025-04-18T17:17:55.068165",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  \n",
       "0           225             0  \n",
       "1            77             0  \n",
       "2           177             0  \n",
       "3            60             0  \n",
       "4           116             0  \n",
       "...         ...           ...  \n",
       "549341       15             0  \n",
       "549342       18             0  \n",
       "549343       17             0  \n",
       "549344       18             0  \n",
       "549345       17             0  \n",
       "\n",
       "[549346 rows x 5 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from urllib.parse import urlparse\n",
    "import re\n",
    "\n",
    "# Function to check if the hostname appears in the full URL\n",
    "def abnormal_url(url):\n",
    "    hostname = urlparse(url).hostname\n",
    "    if hostname and re.search(re.escape(hostname), url):\n",
    "        return 1  # Normal URL\n",
    "    else:\n",
    "        return 0  # Abnormal URL\n",
    "\n",
    "# Apply the abnormal_url function to each URL in the dataset\n",
    "dataset['abnormal_url'] = dataset['URL'].apply(abnormal_url)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6e90d2b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:57.413720Z",
     "iopub.status.busy": "2025-04-18T17:17:57.413303Z",
     "iopub.status.idle": "2025-04-18T17:17:57.425259Z",
     "shell.execute_reply": "2025-04-18T17:17:57.423497Z"
    },
    "papermill": {
     "duration": 0.023879,
     "end_time": "2025-04-18T17:17:57.427202",
     "exception": false,
     "start_time": "2025-04-18T17:17:57.403323",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "abnormal_url\n",
      "0    549217\n",
      "1       129\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check the distribution of abnormal_url values\n",
    "print(dataset['abnormal_url'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e9906758",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:17:57.445950Z",
     "iopub.status.busy": "2025-04-18T17:17:57.445553Z",
     "iopub.status.idle": "2025-04-18T17:18:00.424897Z",
     "shell.execute_reply": "2025-04-18T17:18:00.423938Z"
    },
    "papermill": {
     "duration": 2.99059,
     "end_time": "2025-04-18T17:18:00.426864",
     "exception": false,
     "start_time": "2025-04-18T17:17:57.436274",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 URL  use_of_ip_address\n",
      "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...                  0\n",
      "1  dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...                  0\n",
      "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....                  0\n",
      "3  mail.printakid.com/www.online.americanexpress....                  0\n",
      "4  thewhiskeydregs.com/wp-content/themes/widescre...                  0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  \n",
       "0           225             0                  0  \n",
       "1            77             0                  0  \n",
       "2           177             0                  0  \n",
       "3            60             0                  0  \n",
       "4           116             0                  0  \n",
       "...         ...           ...                ...  \n",
       "549341       15             0                  1  \n",
       "549342       18             0                  0  \n",
       "549343       17             0                  0  \n",
       "549344       18             0                  0  \n",
       "549345       17             0                  0  \n",
       "\n",
       "[549346 rows x 6 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "\n",
    "# Function to detect if an IP address is present in the URL\n",
    "def having_ip_address(url: str) -> int:\n",
    "    # Regular expression for matching IPv4, hexadecimal IPv4, and IPv6 addresses\n",
    "    match = re.search(\n",
    "        r'(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\/)|'  # IPv4\n",
    "        r'((0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\/)'  # Hexadecimal IPv4\n",
    "        r'(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}', url)  # IPv6\n",
    "\n",
    "    if match:\n",
    "        return 1  # IP address found\n",
    "    else:\n",
    "        return 0  # No IP address found\n",
    "\n",
    "# Apply the function to the 'URL' column\n",
    "dataset['use_of_ip_address'] = dataset['URL'].apply(having_ip_address)\n",
    "\n",
    "# Preview the new feature\n",
    "print(dataset[['URL', 'use_of_ip_address']].head())\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c830da75",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:00.447398Z",
     "iopub.status.busy": "2025-04-18T17:18:00.447045Z",
     "iopub.status.idle": "2025-04-18T17:18:00.457654Z",
     "shell.execute_reply": "2025-04-18T17:18:00.456012Z"
    },
    "papermill": {
     "duration": 0.024624,
     "end_time": "2025-04-18T17:18:00.460137",
     "exception": false,
     "start_time": "2025-04-18T17:18:00.435513",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "use_of_ip_address\n",
      "0    543634\n",
      "1      5712\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check the distribution of use_of_ip_address values\n",
    "print(dataset['use_of_ip_address'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f5ad481f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:00.480283Z",
     "iopub.status.busy": "2025-04-18T17:18:00.479950Z",
     "iopub.status.idle": "2025-04-18T17:18:04.107867Z",
     "shell.execute_reply": "2025-04-18T17:18:04.106841Z"
    },
    "papermill": {
     "duration": 3.640096,
     "end_time": "2025-04-18T17:18:04.109787",
     "exception": false,
     "start_time": "2025-04-18T17:18:00.469691",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  \n",
       "0       0  0  0   0  \n",
       "1       0  0  0   0  \n",
       "2       0  0  0   0  \n",
       "3       0  0  0   0  \n",
       "4       0  0  0   1  \n",
       "...    .. .. ..  ..  \n",
       "549341  0  0  0   0  \n",
       "549342  0  0  0   0  \n",
       "549343  0  0  0   0  \n",
       "549344  0  0  0   0  \n",
       "549345  0  0  0   0  \n",
       "\n",
       "[549346 rows x 19 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List of special characters to count in URLs\n",
    "features = ['@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//']\n",
    "\n",
    "# Count occurrences of each feature in the 'URL' column and create new columns\n",
    "for feature in features:\n",
    "    dataset[feature] = dataset['URL'].apply(lambda url: url.count(feature))\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "3f565fee",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:04.198203Z",
     "iopub.status.busy": "2025-04-18T17:18:04.197881Z",
     "iopub.status.idle": "2025-04-18T17:18:07.751787Z",
     "shell.execute_reply": "2025-04-18T17:18:07.750832Z"
    },
    "papermill": {
     "duration": 3.634398,
     "end_time": "2025-04-18T17:18:07.753376",
     "exception": false,
     "start_time": "2025-04-18T17:18:04.118978",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  \n",
       "0       0  0  0   0  \n",
       "1       0  0  0   0  \n",
       "2       0  0  0   0  \n",
       "3       0  0  0   0  \n",
       "4       0  0  0   1  \n",
       "...    .. .. ..  ..  \n",
       "549341  0  0  0   0  \n",
       "549342  0  0  0   0  \n",
       "549343  0  0  0   0  \n",
       "549344  0  0  0   0  \n",
       "549345  0  0  0   0  \n",
       "\n",
       "[549346 rows x 19 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List of special characters to count in URLs\n",
    "features = ['@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//']\n",
    "\n",
    "# Count occurrences of each special character in the 'URL' column and create new columns\n",
    "for feature in features:\n",
    "    dataset[feature] = dataset['URL'].apply(lambda url: url.count(feature))\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4299e7f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:07.774202Z",
     "iopub.status.busy": "2025-04-18T17:18:07.773880Z",
     "iopub.status.idle": "2025-04-18T17:18:09.761074Z",
     "shell.execute_reply": "2025-04-18T17:18:09.760162Z"
    },
    "papermill": {
     "duration": 1.99961,
     "end_time": "2025-04-18T17:18:09.762598",
     "exception": false,
     "start_time": "2025-04-18T17:18:07.762988",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  https  \n",
       "0       0  0  0   0      0  \n",
       "1       0  0  0   0      0  \n",
       "2       0  0  0   0      0  \n",
       "3       0  0  0   0      0  \n",
       "4       0  0  0   1      0  \n",
       "...    .. .. ..  ..    ...  \n",
       "549341  0  0  0   0      0  \n",
       "549342  0  0  0   0      0  \n",
       "549343  0  0  0   0      0  \n",
       "549344  0  0  0   0      0  \n",
       "549345  0  0  0   0      0  \n",
       "\n",
       "[549346 rows x 20 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from urllib.parse import urlparse\n",
    "\n",
    "# Function to check if the URL uses HTTPS\n",
    "def httpSecured(url: str) -> int:\n",
    "    scheme = urlparse(url).scheme  # Extract the scheme (http or https)\n",
    "    return 1 if scheme == 'https' else 0  # Return 1 if HTTPS, otherwise 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'https'\n",
    "dataset['https'] = dataset['URL'].apply(httpSecured)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "5bc454c9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:09.783562Z",
     "iopub.status.busy": "2025-04-18T17:18:09.783228Z",
     "iopub.status.idle": "2025-04-18T17:18:12.167136Z",
     "shell.execute_reply": "2025-04-18T17:18:12.166241Z"
    },
    "papermill": {
     "duration": 2.396474,
     "end_time": "2025-04-18T17:18:12.168881",
     "exception": false,
     "start_time": "2025-04-18T17:18:09.772407",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 URL  digits\n",
      "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...      58\n",
      "1  dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...       1\n",
      "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....      47\n",
      "3  mail.printakid.com/www.online.americanexpress....       0\n",
      "4  thewhiskeydregs.com/wp-content/themes/widescre...      21\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  https  digits  \n",
       "0       0  0  0   0      0      58  \n",
       "1       0  0  0   0      0       1  \n",
       "2       0  0  0   0      0      47  \n",
       "3       0  0  0   0      0       0  \n",
       "4       0  0  0   1      0      21  \n",
       "...    .. .. ..  ..    ...     ...  \n",
       "549341  0  0  0   0      0      11  \n",
       "549342  0  0  0   0      0       0  \n",
       "549343  0  0  0   0      0       0  \n",
       "549344  0  0  0   0      0       0  \n",
       "549345  0  0  0   0      0       0  \n",
       "\n",
       "[549346 rows x 21 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to count the number of digits in the URL\n",
    "def digit_count(url: str) -> int:\n",
    "    # Count digits in the URL string\n",
    "    return sum(c.isnumeric() for c in url)\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'digits'\n",
    "dataset['digits'] = dataset['URL'].apply(digit_count)\n",
    "\n",
    "# Preview the new 'digits' feature\n",
    "print(dataset[['URL', 'digits']].head())\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "4bc55d2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:12.190300Z",
     "iopub.status.busy": "2025-04-18T17:18:12.189991Z",
     "iopub.status.idle": "2025-04-18T17:18:14.792958Z",
     "shell.execute_reply": "2025-04-18T17:18:14.791927Z"
    },
    "papermill": {
     "duration": 2.61555,
     "end_time": "2025-04-18T17:18:14.794580",
     "exception": false,
     "start_time": "2025-04-18T17:18:12.179030",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  %  +  $  !  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        *  ,  //  https  digits  letters  \n",
       "0       0  0   0      0      58      135  \n",
       "1       0  0   0      0       1       62  \n",
       "2       0  0   0      0      47      111  \n",
       "3       0  0   0      0       0       52  \n",
       "4       0  0   1      0      21       82  \n",
       "...    .. ..  ..    ...     ...      ...  \n",
       "549341  0  0   0      0      11        0  \n",
       "549342  0  0   0      0       0       15  \n",
       "549343  0  0   0      0       0       14  \n",
       "549344  0  0   0      0       0       15  \n",
       "549345  0  0   0      0       0       15  \n",
       "\n",
       "[549346 rows x 22 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to count the number of letters in the URL\n",
    "def letter_count(url: str) -> int:\n",
    "    # Count alphabetic characters (letters) in the URL string\n",
    "    return sum(c.isalpha() for c in url)\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'letters'\n",
    "dataset['letters'] = dataset['URL'].apply(letter_count)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "978b2894",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:14.817820Z",
     "iopub.status.busy": "2025-04-18T17:18:14.817480Z",
     "iopub.status.idle": "2025-04-18T17:18:19.374791Z",
     "shell.execute_reply": "2025-04-18T17:18:19.373479Z"
    },
    "papermill": {
     "duration": 4.570966,
     "end_time": "2025-04-18T17:18:19.376693",
     "exception": false,
     "start_time": "2025-04-18T17:18:14.805727",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  +  $  !  *  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        ,  //  https  digits  letters  Shortining_Service  \n",
       "0       0   0      0      58      135                   0  \n",
       "1       0   0      0       1       62                   0  \n",
       "2       0   0      0      47      111                   0  \n",
       "3       0   0      0       0       52                   0  \n",
       "4       0   1      0      21       82                   0  \n",
       "...    ..  ..    ...     ...      ...                 ...  \n",
       "549341  0   0      0      11        0                   0  \n",
       "549342  0   0      0       0       15                   0  \n",
       "549343  0   0      0       0       14                   0  \n",
       "549344  0   0      0       0       15                   0  \n",
       "549345  0   0      0       0       15                   0  \n",
       "\n",
       "[549346 rows x 23 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "\n",
    "# Function to check if the URL uses a shortening service\n",
    "def Shortening_Service(url: str) -> int:\n",
    "    # List of common URL shortening services\n",
    "    shortening_services = (\n",
    "        'bit\\.ly|goo\\.gl|shorte\\.st|go2l\\.ink|x\\.co|ow\\.ly|t\\.co|tinyurl|tr\\.im|is\\.gd|cli\\.gs|yfrog\\.com|'\n",
    "        'migre\\.me|ff\\.im|tiny\\.cc|url4\\.eu|twit\\.ac|su\\.pr|twurl\\.nl|snipurl\\.com|short\\.to|BudURL\\.com|'\n",
    "        'ping\\.fm|post\\.ly|Just\\.as|bkite\\.com|snipr\\.com|fic\\.kr|loopt\\.us|doiop\\.com|short\\.ie|kl\\.am|'\n",
    "        'wp\\.me|rubyurl\\.com|om\\.ly|to\\.ly|bit\\.do|t\\.co|lnkd\\.in|db\\.tt|qr\\.ae|adf\\.ly|goo\\.gl|bitly\\.com|'\n",
    "        'cur\\.lv|tinyurl\\.com|ow\\.ly|bit\\.ly|ity\\.im|q\\.gs|is\\.gd|po\\.st|bc\\.vc|twitthis\\.com|u\\.to|j\\.mp|'\n",
    "        'buzurl\\.com|cutt\\.us|u\\.bb|yourls\\.org|x\\.co|prettylinkpro\\.com|scrnch\\.me|filoops\\.info|vzturl\\.com|'\n",
    "        'qr\\.net|1url\\.com|tweez\\.me|v\\.gd|tr\\.im|link\\.zip\\.net'\n",
    "    )\n",
    "    # Search for any matching shortening service in the URL\n",
    "    match = re.search(shortening_services, url)\n",
    "    \n",
    "    # Return 1 if match found, otherwise return 0\n",
    "    return 1 if match else 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'Shortining_Service'\n",
    "dataset['Shortining_Service'] = dataset['URL'].apply(Shortening_Service)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9887f482",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:19.401331Z",
     "iopub.status.busy": "2025-04-18T17:18:19.401023Z",
     "iopub.status.idle": "2025-04-18T17:18:23.380983Z",
     "shell.execute_reply": "2025-04-18T17:18:23.379954Z"
    },
    "papermill": {
     "duration": 3.994716,
     "end_time": "2025-04-18T17:18:23.383034",
     "exception": false,
     "start_time": "2025-04-18T17:18:19.388318",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting googlesearch-python\r\n",
      "  Downloading googlesearch_python-1.3.0-py3-none-any.whl.metadata (3.4 kB)\r\n",
      "Requirement already satisfied: beautifulsoup4>=4.9 in /usr/local/lib/python3.11/dist-packages (from googlesearch-python) (4.13.3)\r\n",
      "Requirement already satisfied: requests>=2.20 in /usr/local/lib/python3.11/dist-packages (from googlesearch-python) (2.32.3)\r\n",
      "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.9->googlesearch-python) (2.6)\r\n",
      "Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.9->googlesearch-python) (4.13.1)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (3.4.1)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (3.10)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (2.3.0)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (2025.1.31)\r\n",
      "Downloading googlesearch_python-1.3.0-py3-none-any.whl (5.6 kB)\r\n",
      "Installing collected packages: googlesearch-python\r\n",
      "Successfully installed googlesearch-python-1.3.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install googlesearch-python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a786a2ef",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:23.407128Z",
     "iopub.status.busy": "2025-04-18T17:18:23.406789Z",
     "iopub.status.idle": "2025-04-18T17:18:24.914196Z",
     "shell.execute_reply": "2025-04-18T17:18:24.913269Z"
    },
    "papermill": {
     "duration": 1.521586,
     "end_time": "2025-04-18T17:18:24.915884",
     "exception": false,
     "start_time": "2025-04-18T17:18:23.394298",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "      <th>google_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  $  !  *  ,  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        //  https  digits  letters  Shortining_Service  google_index  \n",
       "0        0      0      58      135                   0             1  \n",
       "1        0      0       1       62                   0             1  \n",
       "2        0      0      47      111                   0             1  \n",
       "3        0      0       0       52                   0             1  \n",
       "4        1      0      21       82                   0             1  \n",
       "...     ..    ...     ...      ...                 ...           ...  \n",
       "549341   0      0      11        0                   0             1  \n",
       "549342   0      0       0       15                   0             1  \n",
       "549343   0      0       0       14                   0             1  \n",
       "549344   0      0       0       15                   0             1  \n",
       "549345   0      0       0       15                   0             1  \n",
       "\n",
       "[549346 rows x 24 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from googlesearch import search\n",
    "\n",
    "# Function to check if a URL is indexed by Google\n",
    "def google_index(url: str) -> int:\n",
    "    # Search the URL on Google and retrieve the top 5 results\n",
    "    site = search(url, num_results=5)\n",
    "    return 1 if site else 0  # Return 1 if indexed, otherwise 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'google_index'\n",
    "dataset['google_index'] = dataset['URL'].apply(google_index)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "312f73aa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:24.941206Z",
     "iopub.status.busy": "2025-04-18T17:18:24.940699Z",
     "iopub.status.idle": "2025-04-18T17:18:25.035932Z",
     "shell.execute_reply": "2025-04-18T17:18:25.035068Z"
    },
    "papermill": {
     "duration": 0.1096,
     "end_time": "2025-04-18T17:18:25.037403",
     "exception": false,
     "start_time": "2025-04-18T17:18:24.927803",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "URL                   0\n",
       "Label                 0\n",
       "class_url             0\n",
       "url_len               0\n",
       "abnormal_url          0\n",
       "use_of_ip_address     0\n",
       "@                     0\n",
       "?                     0\n",
       "-                     0\n",
       "=                     0\n",
       ".                     0\n",
       "#                     0\n",
       "%                     0\n",
       "+                     0\n",
       "$                     0\n",
       "!                     0\n",
       "*                     0\n",
       ",                     0\n",
       "//                    0\n",
       "https                 0\n",
       "digits                0\n",
       "letters               0\n",
       "Shortining_Service    0\n",
       "google_index          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "4399666b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.061912Z",
     "iopub.status.busy": "2025-04-18T17:18:25.061539Z",
     "iopub.status.idle": "2025-04-18T17:18:25.067762Z",
     "shell.execute_reply": "2025-04-18T17:18:25.066489Z"
    },
    "papermill": {
     "duration": 0.020187,
     "end_time": "2025-04-18T17:18:25.069219",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.049032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(549346, 24)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "927a7a7d",
   "metadata": {
    "papermill": {
     "duration": 0.012234,
     "end_time": "2025-04-18T17:18:25.093992",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.081758",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data Training and Testing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d2977a7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.118172Z",
     "iopub.status.busy": "2025-04-18T17:18:25.117883Z",
     "iopub.status.idle": "2025-04-18T17:18:25.146290Z",
     "shell.execute_reply": "2025-04-18T17:18:25.145323Z"
    },
    "papermill": {
     "duration": 0.042615,
     "end_time": "2025-04-18T17:18:25.148145",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.105530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Dropping unnecessary columns and creating feature set 'X'\n",
    "X = dataset.drop(['URL', 'Label', 'class_url', '@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//'], axis=1)\n",
    "\n",
    "# Target variable 'y' is the class_url column\n",
    "y = dataset['class_url']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d4eaac91",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.174221Z",
     "iopub.status.busy": "2025-04-18T17:18:25.173908Z",
     "iopub.status.idle": "2025-04-18T17:18:25.185549Z",
     "shell.execute_reply": "2025-04-18T17:18:25.184592Z"
    },
    "papermill": {
     "duration": 0.027177,
     "end_time": "2025-04-18T17:18:25.187238",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.160061",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "      <th>google_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        url_len  abnormal_url  use_of_ip_address  https  digits  letters  \\\n",
       "0           225             0                  0      0      58      135   \n",
       "1            77             0                  0      0       1       62   \n",
       "2           177             0                  0      0      47      111   \n",
       "3            60             0                  0      0       0       52   \n",
       "4           116             0                  0      0      21       82   \n",
       "...         ...           ...                ...    ...     ...      ...   \n",
       "549341       15             0                  1      0      11        0   \n",
       "549342       18             0                  0      0       0       15   \n",
       "549343       17             0                  0      0       0       14   \n",
       "549344       18             0                  0      0       0       15   \n",
       "549345       17             0                  0      0       0       15   \n",
       "\n",
       "        Shortining_Service  google_index  \n",
       "0                        0             1  \n",
       "1                        0             1  \n",
       "2                        0             1  \n",
       "3                        0             1  \n",
       "4                        0             1  \n",
       "...                    ...           ...  \n",
       "549341                   0             1  \n",
       "549342                   0             1  \n",
       "549343                   0             1  \n",
       "549344                   0             1  \n",
       "549345                   0             1  \n",
       "\n",
       "[549346 rows x 8 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ba7e004f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.213064Z",
     "iopub.status.busy": "2025-04-18T17:18:25.212746Z",
     "iopub.status.idle": "2025-04-18T17:18:25.219713Z",
     "shell.execute_reply": "2025-04-18T17:18:25.218809Z"
    },
    "papermill": {
     "duration": 0.021765,
     "end_time": "2025-04-18T17:18:25.221177",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.199412",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         0\n",
       "1         0\n",
       "2         0\n",
       "3         0\n",
       "4         0\n",
       "         ..\n",
       "549341    0\n",
       "549342    0\n",
       "549343    0\n",
       "549344    0\n",
       "549345    0\n",
       "Name: class_url, Length: 549346, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "63dd2256",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.246820Z",
     "iopub.status.busy": "2025-04-18T17:18:25.246469Z",
     "iopub.status.idle": "2025-04-18T17:18:25.514838Z",
     "shell.execute_reply": "2025-04-18T17:18:25.513867Z"
    },
    "papermill": {
     "duration": 0.28321,
     "end_time": "2025-04-18T17:18:25.516650",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.233440",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Splitting the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "93f52c5b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.542375Z",
     "iopub.status.busy": "2025-04-18T17:18:25.541583Z",
     "iopub.status.idle": "2025-04-18T17:18:25.547233Z",
     "shell.execute_reply": "2025-04-18T17:18:25.546138Z"
    },
    "papermill": {
     "duration": 0.019931,
     "end_time": "2025-04-18T17:18:25.548748",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.528817",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train Shape : (439476, 8)\n",
      "Y_train Shape : (439476,)\n",
      "X_test Shape : (109870, 8)\n",
      "Y_test Shape : (109870,)\n"
     ]
    }
   ],
   "source": [
    "print(f\"X_train Shape : {X_train.shape}\")  # Shape of the training features\n",
    "print(f\"Y_train Shape : {y_train.shape}\")  # Shape of the training target variable\n",
    "print(f\"X_test Shape : {X_test.shape}\")    # Shape of the test features\n",
    "print(f\"Y_test Shape : {y_test.shape}\")    # Shape of the test target variable"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a3fbf25b",
   "metadata": {
    "papermill": {
     "duration": 0.012226,
     "end_time": "2025-04-18T17:18:25.573295",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.561069",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Model Developing CNN**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6248648b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:18:25.598921Z",
     "iopub.status.busy": "2025-04-18T17:18:25.598563Z",
     "iopub.status.idle": "2025-04-18T17:23:20.128313Z",
     "shell.execute_reply": "2025-04-18T17:23:20.127064Z"
    },
    "papermill": {
     "duration": 294.54442,
     "end_time": "2025-04-18T17:23:20.130182",
     "exception": false,
     "start_time": "2025-04-18T17:18:25.585762",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-04-18 17:18:27.995414: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1744996708.264679      13 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1744996708.342182      13 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
      "2025-04-18 17:18:43.358548: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:152] failed call to cuInit: INTERNAL: CUDA error: Failed call to cuInit: UNKNOWN ERROR (303)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m29s\u001b[0m 2ms/step - accuracy: 0.7522 - loss: 0.5659\n",
      "Epoch 2/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2ms/step - accuracy: 0.7861 - loss: 0.4951\n",
      "Epoch 3/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2ms/step - accuracy: 0.7972 - loss: 0.4779\n",
      "Epoch 4/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2ms/step - accuracy: 0.7983 - loss: 0.4751\n",
      "Epoch 5/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 2ms/step - accuracy: 0.7987 - loss: 0.4749\n",
      "Epoch 6/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2ms/step - accuracy: 0.8006 - loss: 0.4718\n",
      "Epoch 7/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2ms/step - accuracy: 0.8002 - loss: 0.4719\n",
      "Epoch 8/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m27s\u001b[0m 2ms/step - accuracy: 0.8015 - loss: 0.4697\n",
      "Epoch 9/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m26s\u001b[0m 2ms/step - accuracy: 0.8013 - loss: 0.4693\n",
      "Epoch 10/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 2ms/step - accuracy: 0.8013 - loss: 0.4694\n",
      "\u001b[1m3434/3434\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 1ms/step\n",
      "CNN Accuracy: 80.38%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.83      0.39      0.53     31288\n",
      "           1       0.80      0.97      0.88     78582\n",
      "\n",
      "    accuracy                           0.80    109870\n",
      "   macro avg       0.82      0.68      0.70    109870\n",
      "weighted avg       0.81      0.80      0.78    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Conv1D, MaxPooling1D, Flatten, Dense, Input\n",
    "\n",
    "# Reshape the data for CNN input\n",
    "X_train_cnn = np.expand_dims(X_train.values, axis=2)\n",
    "X_test_cnn = np.expand_dims(X_test.values, axis=2)\n",
    "\n",
    "# Ensure correct shape: (samples, time_steps, features)\n",
    "X_train_cnn = np.array(X_train_cnn).reshape(len(X_train_cnn), -1, 1)\n",
    "X_test_cnn = np.array(X_test_cnn).reshape(len(X_test_cnn), -1, 1)\n",
    "\n",
    "# Build CNN model\n",
    "cnn = Sequential([\n",
    "    Input(shape=(X_train_cnn.shape[1], 1)),  # Correct input shape\n",
    "    Conv1D(filters=64, kernel_size=2, activation='relu'),\n",
    "    MaxPooling1D(pool_size=2),\n",
    "    Flatten(),\n",
    "    Dense(50, activation='relu'),\n",
    "    Dense(1, activation='sigmoid')\n",
    "])\n",
    "\n",
    "# Compile model\n",
    "cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Train model\n",
    "cnn.fit(X_train_cnn, y_train, epochs=10, batch_size=32, verbose=1)\n",
    "\n",
    "# Predict probabilities\n",
    "cnn_pred = cnn.predict(X_test_cnn).ravel()\n",
    "\n",
    "# Convert probabilities to class labels\n",
    "y_pred = (cnn_pred > 0.5).astype(int)\n",
    "\n",
    "# 1. Accuracy\n",
    "accuracy = cnn.evaluate(X_test_cnn, y_test, verbose=0)\n",
    "print(f\"CNN Accuracy: {accuracy[1]:.2%}\")\n",
    "\n",
    "# 2. Confusion Matrix\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "            xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "            yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "plt.title('CNN Confusion Matrix')\n",
    "plt.xlabel('Predicted labels')\n",
    "plt.ylabel('True labels')\n",
    "plt.show()\n",
    "\n",
    "# 3. Classification Report\n",
    "print(\"\\nClassification Report:\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39059c26",
   "metadata": {
    "papermill": {
     "duration": 0.272532,
     "end_time": "2025-04-18T17:23:20.759105",
     "exception": false,
     "start_time": "2025-04-18T17:23:20.486573",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**svm**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "90ab941a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:23:21.314520Z",
     "iopub.status.busy": "2025-04-18T17:23:21.313776Z",
     "iopub.status.idle": "2025-04-18T17:24:12.392938Z",
     "shell.execute_reply": "2025-04-18T17:24:12.391829Z"
    },
    "papermill": {
     "duration": 51.550643,
     "end_time": "2025-04-18T17:24:12.585587",
     "exception": false,
     "start_time": "2025-04-18T17:23:21.034944",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM Accuracy: 73.77%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.09      0.16     31288\n",
      "           1       0.73      1.00      0.84     78582\n",
      "\n",
      "    accuracy                           0.74    109870\n",
      "   macro avg       0.83      0.54      0.50    109870\n",
      "weighted avg       0.79      0.74      0.65    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Train SVM on a smaller sample due to performance\n",
    "X_train_small = X_train[:5000]\n",
    "y_train_small = y_train[:5000]\n",
    "\n",
    "# Train SVM model\n",
    "svm = SVC(probability=True)\n",
    "svm.fit(X_train_small, y_train_small)\n",
    "\n",
    "# Predict probabilities for ensemble\n",
    "svm_pred = svm.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# Predict class labels\n",
    "y_pred = svm.predict(X_test)\n",
    "\n",
    "# Accuracy & Evaluation\n",
    "def print_results(model, X_test, y_test, model_name):\n",
    "    y_pred = model.predict(X_test)\n",
    "    acc = accuracy_score(y_test, y_pred)\n",
    "    cm = confusion_matrix(y_test, y_pred)\n",
    "    print(f\"{model_name} Accuracy: {acc:.2%}\")\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "                xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "                yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "    plt.xlabel(\"Predicted labels\")\n",
    "    plt.ylabel(\"True labels\")\n",
    "    plt.title(f\"{model_name} Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    print(\"\\nClassification Report:\")\n",
    "    print(classification_report(y_test, y_pred))\n",
    "\n",
    "# Evaluate\n",
    "print_results(svm, X_test, y_test, 'SVM')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c469123",
   "metadata": {
    "papermill": {
     "duration": 0.281468,
     "end_time": "2025-04-18T17:24:13.146161",
     "exception": false,
     "start_time": "2025-04-18T17:24:12.864693",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**MLP**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "76f2c36e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-18T17:24:13.705064Z",
     "iopub.status.busy": "2025-04-18T17:24:13.704241Z",
     "iopub.status.idle": "2025-04-18T17:24:19.380454Z",
     "shell.execute_reply": "2025-04-18T17:24:19.379336Z"
    },
    "papermill": {
     "duration": 5.954971,
     "end_time": "2025-04-18T17:24:19.382292",
     "exception": false,
     "start_time": "2025-04-18T17:24:13.427321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:686: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (3) reached and the optimization hasn't converged yet.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MLP Accuracy: 79.51%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.86      0.33      0.48     31288\n",
      "           1       0.79      0.98      0.87     78582\n",
      "\n",
      "    accuracy                           0.80    109870\n",
      "   macro avg       0.82      0.66      0.68    109870\n",
      "weighted avg       0.81      0.80      0.76    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Train MLP\n",
    "mlp = MLPClassifier(max_iter=3)\n",
    "mlp.fit(X_train, y_train)\n",
    "\n",
    "# Predict probabilities for ensemble\n",
    "mlp_pred = mlp.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# Predict class labels\n",
    "y_pred = mlp.predict(X_test)\n",
    "\n",
    "# Accuracy & Evaluation\n",
    "def print_results(model, X_test, y_test, model_name):\n",
    "    y_pred = model.predict(X_test)\n",
    "    acc = accuracy_score(y_test, y_pred)\n",
    "    cm = confusion_matrix(y_test, y_pred)\n",
    "    print(f\"{model_name} Accuracy: {acc:.2%}\")\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "                xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "                yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "    plt.xlabel(\"Predicted labels\")\n",
    "    plt.ylabel(\"True labels\")\n",
    "    plt.title(f\"{model_name} Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    print(\"\\nClassification Report:\")\n",
    "    print(classification_report(y_test, y_pred))\n",
    "\n",
    "# Evaluate\n",
    "print_results(mlp, X_test, y_test, 'MLP')\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 791543,
     "sourceId": 1359146,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 406.526397,
   "end_time": "2025-04-18T17:24:23.269242",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-18T17:17:36.742845",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
