{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4c35e9cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:48.628608Z",
     "iopub.status.busy": "2025-04-19T04:52:48.628261Z",
     "iopub.status.idle": "2025-04-19T04:52:49.319357Z",
     "shell.execute_reply": "2025-04-19T04:52:49.318282Z"
    },
    "papermill": {
     "duration": 0.701271,
     "end_time": "2025-04-19T04:52:49.320826",
     "exception": false,
     "start_time": "2025-04-19T04:52:48.619555",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Data source import complete.\n"
     ]
    }
   ],
   "source": [
    "import kagglehub\n",
    "taruntiwarihp_phishing_site_urls_path = kagglehub.dataset_download('taruntiwarihp/phishing-site-urls')\n",
    "\n",
    "print('Data source import complete.')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c1115731",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:49.337140Z",
     "iopub.status.busy": "2025-04-19T04:52:49.336815Z",
     "iopub.status.idle": "2025-04-19T04:52:51.286755Z",
     "shell.execute_reply": "2025-04-19T04:52:51.285835Z"
    },
    "papermill": {
     "duration": 1.960262,
     "end_time": "2025-04-19T04:52:51.288219",
     "exception": false,
     "start_time": "2025-04-19T04:52:49.327957",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/phishing-site-urls/phishing_site_urls.csv\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "681d696b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:51.303509Z",
     "iopub.status.busy": "2025-04-19T04:52:51.303060Z",
     "iopub.status.idle": "2025-04-19T04:52:52.389954Z",
     "shell.execute_reply": "2025-04-19T04:52:52.388686Z"
    },
    "papermill": {
     "duration": 1.096518,
     "end_time": "2025-04-19T04:52:52.391744",
     "exception": false,
     "start_time": "2025-04-19T04:52:51.295226",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "dataset = pd.read_csv(\"/kaggle/input/phishing-site-urls/phishing_site_urls.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "61503a7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.408574Z",
     "iopub.status.busy": "2025-04-19T04:52:52.408214Z",
     "iopub.status.idle": "2025-04-19T04:52:52.432125Z",
     "shell.execute_reply": "2025-04-19T04:52:52.431109Z"
    },
    "papermill": {
     "duration": 0.033732,
     "end_time": "2025-04-19T04:52:52.433649",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.399917",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                 URL Label\n",
       "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad\n",
       "1  www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...   bad\n",
       "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad\n",
       "3  mail.printakid.com/www.online.americanexpress....   bad\n",
       "4  thewhiskeydregs.com/wp-content/themes/widescre...   bad"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0ad57943",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.450320Z",
     "iopub.status.busy": "2025-04-19T04:52:52.449390Z",
     "iopub.status.idle": "2025-04-19T04:52:52.458418Z",
     "shell.execute_reply": "2025-04-19T04:52:52.457603Z"
    },
    "papermill": {
     "duration": 0.019182,
     "end_time": "2025-04-19T04:52:52.459969",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.440787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       URL Label\n",
       "549341     23.227.196.215/   bad\n",
       "549342  apple-checker.org/   bad\n",
       "549343   apple-iclods.org/   bad\n",
       "549344  apple-uptoday.org/   bad\n",
       "549345   apple-search.info   bad"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5719d8df",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.475657Z",
     "iopub.status.busy": "2025-04-19T04:52:52.475292Z",
     "iopub.status.idle": "2025-04-19T04:52:52.480286Z",
     "shell.execute_reply": "2025-04-19T04:52:52.479261Z"
    },
    "papermill": {
     "duration": 0.014677,
     "end_time": "2025-04-19T04:52:52.481770",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.467093",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset shape: (549346, 2)\n"
     ]
    }
   ],
   "source": [
    "print(\"Dataset shape:\", dataset.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f60f774c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.497317Z",
     "iopub.status.busy": "2025-04-19T04:52:52.497020Z",
     "iopub.status.idle": "2025-04-19T04:52:52.504314Z",
     "shell.execute_reply": "2025-04-19T04:52:52.503448Z"
    },
    "papermill": {
     "duration": 0.016694,
     "end_time": "2025-04-19T04:52:52.505707",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.489013",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['URL', 'Label'], dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "997dbd6e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.521468Z",
     "iopub.status.busy": "2025-04-19T04:52:52.521151Z",
     "iopub.status.idle": "2025-04-19T04:52:52.591885Z",
     "shell.execute_reply": "2025-04-19T04:52:52.590819Z"
    },
    "papermill": {
     "duration": 0.080864,
     "end_time": "2025-04-19T04:52:52.593814",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.512950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "URL      0\n",
       "Label    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88d36777",
   "metadata": {
    "papermill": {
     "duration": 0.010928,
     "end_time": "2025-04-19T04:52:52.615192",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.604264",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data preprocessing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "dc6a13ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:52.635667Z",
     "iopub.status.busy": "2025-04-19T04:52:52.635194Z",
     "iopub.status.idle": "2025-04-19T04:52:54.725318Z",
     "shell.execute_reply": "2025-04-19T04:52:54.724175Z"
    },
    "papermill": {
     "duration": 2.100481,
     "end_time": "2025-04-19T04:52:54.726884",
     "exception": false,
     "start_time": "2025-04-19T04:52:52.626403",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class distribution:\n",
      " class_url\n",
      "1    392924\n",
      "0    156422\n",
      "Name: count, dtype: int64\n",
      "\n",
      "Top repeated URLs:\n",
      " URL\n",
      "jhomitevd2abj3fk.tor2web.org/    52\n",
      "jhomitevd2abj3fk.onion.to/       52\n",
      "zjfq4lnfbs7pncr5.onion.to/       44\n",
      "zjfq4lnfbs7pncr5.tor2web.org/    44\n",
      "5n7y4yihirccftc5.tor2web.org/    42\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# Encode the 'Label' column into integers\n",
    "label_encoder = LabelEncoder()\n",
    "dataset['class_url'] = label_encoder.fit_transform(dataset['Label'])\n",
    "\n",
    "# Display the distribution of encoded classes\n",
    "print(\"Class distribution:\\n\", dataset['class_url'].value_counts())\n",
    "\n",
    "# Display the most frequent URLs\n",
    "print(\"\\nTop repeated URLs:\\n\", dataset['URL'].value_counts().head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "64e35ec5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:54.743292Z",
     "iopub.status.busy": "2025-04-19T04:52:54.742243Z",
     "iopub.status.idle": "2025-04-19T04:52:54.756764Z",
     "shell.execute_reply": "2025-04-19T04:52:54.755944Z"
    },
    "papermill": {
     "duration": 0.024094,
     "end_time": "2025-04-19T04:52:54.758215",
     "exception": false,
     "start_time": "2025-04-19T04:52:54.734121",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0\n",
       "1       www.dghjdgf.com/paypal.co.uk/cycgi-bin/webscrc...   bad          0\n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0\n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0\n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0\n",
       "...                                                   ...   ...        ...\n",
       "549341                                    23.227.196.215/   bad          0\n",
       "549342                                 apple-checker.org/   bad          0\n",
       "549343                                  apple-iclods.org/   bad          0\n",
       "549344                                 apple-uptoday.org/   bad          0\n",
       "549345                                  apple-search.info   bad          0\n",
       "\n",
       "[549346 rows x 3 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "e73ef4d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:54.774342Z",
     "iopub.status.busy": "2025-04-19T04:52:54.774049Z",
     "iopub.status.idle": "2025-04-19T04:52:55.093353Z",
     "shell.execute_reply": "2025-04-19T04:52:55.092259Z"
    },
    "papermill": {
     "duration": 0.329228,
     "end_time": "2025-04-19T04:52:55.095035",
     "exception": false,
     "start_time": "2025-04-19T04:52:54.765807",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                      URL Label  class_url\n",
      "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0\n",
      "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0\n",
      "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0\n",
      "3       mail.printakid.com/www.online.americanexpress....   bad          0\n",
      "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0\n",
      "...                                                   ...   ...        ...\n",
      "549341                                    23.227.196.215/   bad          0\n",
      "549342                                 apple-checker.org/   bad          0\n",
      "549343                                  apple-iclods.org/   bad          0\n",
      "549344                                 apple-uptoday.org/   bad          0\n",
      "549345                                  apple-search.info   bad          0\n",
      "\n",
      "[549346 rows x 3 columns]\n"
     ]
    }
   ],
   "source": [
    "# Remove 'www.' from URLs\n",
    "dataset['URL'] = dataset['URL'].str.replace(r'^www\\.', '', regex=True)\n",
    "print(dataset)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9f686d04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:55.111624Z",
     "iopub.status.busy": "2025-04-19T04:52:55.111006Z",
     "iopub.status.idle": "2025-04-19T04:52:55.328659Z",
     "shell.execute_reply": "2025-04-19T04:52:55.327776Z"
    },
    "papermill": {
     "duration": 0.227412,
     "end_time": "2025-04-19T04:52:55.330094",
     "exception": false,
     "start_time": "2025-04-19T04:52:55.102682",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  \n",
       "0           225  \n",
       "1            77  \n",
       "2           177  \n",
       "3            60  \n",
       "4           116  \n",
       "...         ...  \n",
       "549341       15  \n",
       "549342       18  \n",
       "549343       17  \n",
       "549344       18  \n",
       "549345       17  \n",
       "\n",
       "[549346 rows x 4 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Create a feature for URL length\n",
    "dataset['url_len'] = dataset['URL'].apply(lambda x: len(str(x)))\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f01ff059",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:52:55.346980Z",
     "iopub.status.busy": "2025-04-19T04:52:55.346657Z",
     "iopub.status.idle": "2025-04-19T04:53:00.216471Z",
     "shell.execute_reply": "2025-04-19T04:53:00.215252Z"
    },
    "papermill": {
     "duration": 4.880515,
     "end_time": "2025-04-19T04:53:00.218464",
     "exception": false,
     "start_time": "2025-04-19T04:52:55.337949",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting tld\r\n",
      "  Downloading tld-0.13-py2.py3-none-any.whl.metadata (9.4 kB)\r\n",
      "Downloading tld-0.13-py2.py3-none-any.whl (263 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m263.8/263.8 kB\u001b[0m \u001b[31m12.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: tld\r\n",
      "Successfully installed tld-0.13\r\n"
     ]
    }
   ],
   "source": [
    "!pip install tld"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8c920fc9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:00.237704Z",
     "iopub.status.busy": "2025-04-19T04:53:00.237323Z",
     "iopub.status.idle": "2025-04-19T04:53:02.524712Z",
     "shell.execute_reply": "2025-04-19T04:53:02.523734Z"
    },
    "papermill": {
     "duration": 2.29908,
     "end_time": "2025-04-19T04:53:02.526237",
     "exception": false,
     "start_time": "2025-04-19T04:53:00.227157",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  \n",
       "0           225             0  \n",
       "1            77             0  \n",
       "2           177             0  \n",
       "3            60             0  \n",
       "4           116             0  \n",
       "...         ...           ...  \n",
       "549341       15             0  \n",
       "549342       18             0  \n",
       "549343       17             0  \n",
       "549344       18             0  \n",
       "549345       17             0  \n",
       "\n",
       "[549346 rows x 5 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from urllib.parse import urlparse\n",
    "import re\n",
    "\n",
    "# Function to check if the hostname appears in the full URL\n",
    "def abnormal_url(url):\n",
    "    hostname = urlparse(url).hostname\n",
    "    if hostname and re.search(re.escape(hostname), url):\n",
    "        return 1  # Normal URL\n",
    "    else:\n",
    "        return 0  # Abnormal URL\n",
    "\n",
    "# Apply the abnormal_url function to each URL in the dataset\n",
    "dataset['abnormal_url'] = dataset['URL'].apply(abnormal_url)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "23fbab53",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:02.544411Z",
     "iopub.status.busy": "2025-04-19T04:53:02.544128Z",
     "iopub.status.idle": "2025-04-19T04:53:02.553336Z",
     "shell.execute_reply": "2025-04-19T04:53:02.552357Z"
    },
    "papermill": {
     "duration": 0.019978,
     "end_time": "2025-04-19T04:53:02.554650",
     "exception": false,
     "start_time": "2025-04-19T04:53:02.534672",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "abnormal_url\n",
      "0    549217\n",
      "1       129\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check the distribution of abnormal_url values\n",
    "print(dataset['abnormal_url'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "4bcd21ad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:02.572341Z",
     "iopub.status.busy": "2025-04-19T04:53:02.572045Z",
     "iopub.status.idle": "2025-04-19T04:53:05.516274Z",
     "shell.execute_reply": "2025-04-19T04:53:05.515337Z"
    },
    "papermill": {
     "duration": 2.954888,
     "end_time": "2025-04-19T04:53:05.517727",
     "exception": false,
     "start_time": "2025-04-19T04:53:02.562839",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 URL  use_of_ip_address\n",
      "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...                  0\n",
      "1  dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...                  0\n",
      "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....                  0\n",
      "3  mail.printakid.com/www.online.americanexpress....                  0\n",
      "4  thewhiskeydregs.com/wp-content/themes/widescre...                  0\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  \n",
       "0           225             0                  0  \n",
       "1            77             0                  0  \n",
       "2           177             0                  0  \n",
       "3            60             0                  0  \n",
       "4           116             0                  0  \n",
       "...         ...           ...                ...  \n",
       "549341       15             0                  1  \n",
       "549342       18             0                  0  \n",
       "549343       17             0                  0  \n",
       "549344       18             0                  0  \n",
       "549345       17             0                  0  \n",
       "\n",
       "[549346 rows x 6 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "\n",
    "# Function to detect if an IP address is present in the URL\n",
    "def having_ip_address(url: str) -> int:\n",
    "    # Regular expression for matching IPv4, hexadecimal IPv4, and IPv6 addresses\n",
    "    match = re.search(\n",
    "        r'(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\/)|'  # IPv4\n",
    "        r'((0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\.(0x[0-9a-fA-F]{1,2})\\/)'  # Hexadecimal IPv4\n",
    "        r'(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}', url)  # IPv6\n",
    "\n",
    "    if match:\n",
    "        return 1  # IP address found\n",
    "    else:\n",
    "        return 0  # No IP address found\n",
    "\n",
    "# Apply the function to the 'URL' column\n",
    "dataset['use_of_ip_address'] = dataset['URL'].apply(having_ip_address)\n",
    "\n",
    "# Preview the new feature\n",
    "print(dataset[['URL', 'use_of_ip_address']].head())\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "98e042f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:05.599349Z",
     "iopub.status.busy": "2025-04-19T04:53:05.599049Z",
     "iopub.status.idle": "2025-04-19T04:53:05.608762Z",
     "shell.execute_reply": "2025-04-19T04:53:05.607575Z"
    },
    "papermill": {
     "duration": 0.083609,
     "end_time": "2025-04-19T04:53:05.610363",
     "exception": false,
     "start_time": "2025-04-19T04:53:05.526754",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "use_of_ip_address\n",
      "0    543634\n",
      "1      5712\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# Check the distribution of use_of_ip_address values\n",
    "print(dataset['use_of_ip_address'].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "cc2fac9d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:05.630508Z",
     "iopub.status.busy": "2025-04-19T04:53:05.630190Z",
     "iopub.status.idle": "2025-04-19T04:53:09.166335Z",
     "shell.execute_reply": "2025-04-19T04:53:09.165338Z"
    },
    "papermill": {
     "duration": 3.548671,
     "end_time": "2025-04-19T04:53:09.167961",
     "exception": false,
     "start_time": "2025-04-19T04:53:05.619290",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  \n",
       "0       0  0  0   0  \n",
       "1       0  0  0   0  \n",
       "2       0  0  0   0  \n",
       "3       0  0  0   0  \n",
       "4       0  0  0   1  \n",
       "...    .. .. ..  ..  \n",
       "549341  0  0  0   0  \n",
       "549342  0  0  0   0  \n",
       "549343  0  0  0   0  \n",
       "549344  0  0  0   0  \n",
       "549345  0  0  0   0  \n",
       "\n",
       "[549346 rows x 19 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List of special characters to count in URLs\n",
    "features = ['@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//']\n",
    "\n",
    "# Count occurrences of each feature in the 'URL' column and create new columns\n",
    "for feature in features:\n",
    "    dataset[feature] = dataset['URL'].apply(lambda url: url.count(feature))\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "10cdfdc4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:09.187775Z",
     "iopub.status.busy": "2025-04-19T04:53:09.187402Z",
     "iopub.status.idle": "2025-04-19T04:53:12.779018Z",
     "shell.execute_reply": "2025-04-19T04:53:12.777935Z"
    },
    "papermill": {
     "duration": 3.603803,
     "end_time": "2025-04-19T04:53:12.780960",
     "exception": false,
     "start_time": "2025-04-19T04:53:09.177157",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  \n",
       "0       0  0  0   0  \n",
       "1       0  0  0   0  \n",
       "2       0  0  0   0  \n",
       "3       0  0  0   0  \n",
       "4       0  0  0   1  \n",
       "...    .. .. ..  ..  \n",
       "549341  0  0  0   0  \n",
       "549342  0  0  0   0  \n",
       "549343  0  0  0   0  \n",
       "549344  0  0  0   0  \n",
       "549345  0  0  0   0  \n",
       "\n",
       "[549346 rows x 19 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List of special characters to count in URLs\n",
    "features = ['@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//']\n",
    "\n",
    "# Count occurrences of each special character in the 'URL' column and create new columns\n",
    "for feature in features:\n",
    "    dataset[feature] = dataset['URL'].apply(lambda url: url.count(feature))\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "1a90fba1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:12.808498Z",
     "iopub.status.busy": "2025-04-19T04:53:12.808198Z",
     "iopub.status.idle": "2025-04-19T04:53:14.769001Z",
     "shell.execute_reply": "2025-04-19T04:53:14.768014Z"
    },
    "papermill": {
     "duration": 1.974832,
     "end_time": "2025-04-19T04:53:14.770406",
     "exception": false,
     "start_time": "2025-04-19T04:53:12.795574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>.</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  .  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  6  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  4  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  7  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  6  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  1  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. .. .. .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  3  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  1  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  https  \n",
       "0       0  0  0   0      0  \n",
       "1       0  0  0   0      0  \n",
       "2       0  0  0   0      0  \n",
       "3       0  0  0   0      0  \n",
       "4       0  0  0   1      0  \n",
       "...    .. .. ..  ..    ...  \n",
       "549341  0  0  0   0      0  \n",
       "549342  0  0  0   0      0  \n",
       "549343  0  0  0   0      0  \n",
       "549344  0  0  0   0      0  \n",
       "549345  0  0  0   0      0  \n",
       "\n",
       "[549346 rows x 20 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from urllib.parse import urlparse\n",
    "\n",
    "# Function to check if the URL uses HTTPS\n",
    "def httpSecured(url: str) -> int:\n",
    "    scheme = urlparse(url).scheme  # Extract the scheme (http or https)\n",
    "    return 1 if scheme == 'https' else 0  # Return 1 if HTTPS, otherwise 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'https'\n",
    "dataset['https'] = dataset['URL'].apply(httpSecured)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ab3f7fd0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:14.791075Z",
     "iopub.status.busy": "2025-04-19T04:53:14.790770Z",
     "iopub.status.idle": "2025-04-19T04:53:17.114374Z",
     "shell.execute_reply": "2025-04-19T04:53:17.113360Z"
    },
    "papermill": {
     "duration": 2.335661,
     "end_time": "2025-04-19T04:53:17.116071",
     "exception": false,
     "start_time": "2025-04-19T04:53:14.780410",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                 URL  digits\n",
      "0  nobell.it/70ffb52d079109dca5664cce6f317373782/...      58\n",
      "1  dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...       1\n",
      "2  serviciosbys.com/paypal.cgi.bin.get-into.herf....      47\n",
      "3  mail.printakid.com/www.online.americanexpress....       0\n",
      "4  thewhiskeydregs.com/wp-content/themes/widescre...      21\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>#</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  #  %  +  $  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        !  *  ,  //  https  digits  \n",
       "0       0  0  0   0      0      58  \n",
       "1       0  0  0   0      0       1  \n",
       "2       0  0  0   0      0      47  \n",
       "3       0  0  0   0      0       0  \n",
       "4       0  0  0   1      0      21  \n",
       "...    .. .. ..  ..    ...     ...  \n",
       "549341  0  0  0   0      0      11  \n",
       "549342  0  0  0   0      0       0  \n",
       "549343  0  0  0   0      0       0  \n",
       "549344  0  0  0   0      0       0  \n",
       "549345  0  0  0   0      0       0  \n",
       "\n",
       "[549346 rows x 21 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to count the number of digits in the URL\n",
    "def digit_count(url: str) -> int:\n",
    "    # Count digits in the URL string\n",
    "    return sum(c.isnumeric() for c in url)\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'digits'\n",
    "dataset['digits'] = dataset['URL'].apply(digit_count)\n",
    "\n",
    "# Preview the new 'digits' feature\n",
    "print(dataset[['URL', 'digits']].head())\n",
    "\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c4d0892f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:17.137853Z",
     "iopub.status.busy": "2025-04-19T04:53:17.137409Z",
     "iopub.status.idle": "2025-04-19T04:53:19.468160Z",
     "shell.execute_reply": "2025-04-19T04:53:19.467094Z"
    },
    "papermill": {
     "duration": 2.343168,
     "end_time": "2025-04-19T04:53:19.469596",
     "exception": false,
     "start_time": "2025-04-19T04:53:17.126428",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>%</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  %  +  $  !  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        *  ,  //  https  digits  letters  \n",
       "0       0  0   0      0      58      135  \n",
       "1       0  0   0      0       1       62  \n",
       "2       0  0   0      0      47      111  \n",
       "3       0  0   0      0       0       52  \n",
       "4       0  0   1      0      21       82  \n",
       "...    .. ..  ..    ...     ...      ...  \n",
       "549341  0  0   0      0      11        0  \n",
       "549342  0  0   0      0       0       15  \n",
       "549343  0  0   0      0       0       14  \n",
       "549344  0  0   0      0       0       15  \n",
       "549345  0  0   0      0       0       15  \n",
       "\n",
       "[549346 rows x 22 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Function to count the number of letters in the URL\n",
    "def letter_count(url: str) -> int:\n",
    "    # Count alphabetic characters (letters) in the URL string\n",
    "    return sum(c.isalpha() for c in url)\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'letters'\n",
    "dataset['letters'] = dataset['URL'].apply(letter_count)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4f3d78bc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:19.492646Z",
     "iopub.status.busy": "2025-04-19T04:53:19.492297Z",
     "iopub.status.idle": "2025-04-19T04:53:23.991855Z",
     "shell.execute_reply": "2025-04-19T04:53:23.990836Z"
    },
    "papermill": {
     "duration": 4.512949,
     "end_time": "2025-04-19T04:53:23.993348",
     "exception": false,
     "start_time": "2025-04-19T04:53:19.480399",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>+</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 23 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  +  $  !  *  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        ,  //  https  digits  letters  Shortining_Service  \n",
       "0       0   0      0      58      135                   0  \n",
       "1       0   0      0       1       62                   0  \n",
       "2       0   0      0      47      111                   0  \n",
       "3       0   0      0       0       52                   0  \n",
       "4       0   1      0      21       82                   0  \n",
       "...    ..  ..    ...     ...      ...                 ...  \n",
       "549341  0   0      0      11        0                   0  \n",
       "549342  0   0      0       0       15                   0  \n",
       "549343  0   0      0       0       14                   0  \n",
       "549344  0   0      0       0       15                   0  \n",
       "549345  0   0      0       0       15                   0  \n",
       "\n",
       "[549346 rows x 23 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import re\n",
    "\n",
    "# Function to check if the URL uses a shortening service\n",
    "def Shortening_Service(url: str) -> int:\n",
    "    # List of common URL shortening services\n",
    "    shortening_services = (\n",
    "        'bit\\.ly|goo\\.gl|shorte\\.st|go2l\\.ink|x\\.co|ow\\.ly|t\\.co|tinyurl|tr\\.im|is\\.gd|cli\\.gs|yfrog\\.com|'\n",
    "        'migre\\.me|ff\\.im|tiny\\.cc|url4\\.eu|twit\\.ac|su\\.pr|twurl\\.nl|snipurl\\.com|short\\.to|BudURL\\.com|'\n",
    "        'ping\\.fm|post\\.ly|Just\\.as|bkite\\.com|snipr\\.com|fic\\.kr|loopt\\.us|doiop\\.com|short\\.ie|kl\\.am|'\n",
    "        'wp\\.me|rubyurl\\.com|om\\.ly|to\\.ly|bit\\.do|t\\.co|lnkd\\.in|db\\.tt|qr\\.ae|adf\\.ly|goo\\.gl|bitly\\.com|'\n",
    "        'cur\\.lv|tinyurl\\.com|ow\\.ly|bit\\.ly|ity\\.im|q\\.gs|is\\.gd|po\\.st|bc\\.vc|twitthis\\.com|u\\.to|j\\.mp|'\n",
    "        'buzurl\\.com|cutt\\.us|u\\.bb|yourls\\.org|x\\.co|prettylinkpro\\.com|scrnch\\.me|filoops\\.info|vzturl\\.com|'\n",
    "        'qr\\.net|1url\\.com|tweez\\.me|v\\.gd|tr\\.im|link\\.zip\\.net'\n",
    "    )\n",
    "    # Search for any matching shortening service in the URL\n",
    "    match = re.search(shortening_services, url)\n",
    "    \n",
    "    # Return 1 if match found, otherwise return 0\n",
    "    return 1 if match else 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'Shortining_Service'\n",
    "dataset['Shortining_Service'] = dataset['URL'].apply(Shortening_Service)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "331c98a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:24.017417Z",
     "iopub.status.busy": "2025-04-19T04:53:24.017089Z",
     "iopub.status.idle": "2025-04-19T04:53:27.732088Z",
     "shell.execute_reply": "2025-04-19T04:53:27.731015Z"
    },
    "papermill": {
     "duration": 3.72915,
     "end_time": "2025-04-19T04:53:27.734036",
     "exception": false,
     "start_time": "2025-04-19T04:53:24.004886",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting googlesearch-python\r\n",
      "  Downloading googlesearch_python-1.3.0-py3-none-any.whl.metadata (3.4 kB)\r\n",
      "Requirement already satisfied: beautifulsoup4>=4.9 in /usr/local/lib/python3.11/dist-packages (from googlesearch-python) (4.13.3)\r\n",
      "Requirement already satisfied: requests>=2.20 in /usr/local/lib/python3.11/dist-packages (from googlesearch-python) (2.32.3)\r\n",
      "Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.9->googlesearch-python) (2.6)\r\n",
      "Requirement already satisfied: typing-extensions>=4.0.0 in /usr/local/lib/python3.11/dist-packages (from beautifulsoup4>=4.9->googlesearch-python) (4.13.1)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (3.4.1)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (3.10)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (2.3.0)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.20->googlesearch-python) (2025.1.31)\r\n",
      "Downloading googlesearch_python-1.3.0-py3-none-any.whl (5.6 kB)\r\n",
      "Installing collected packages: googlesearch-python\r\n",
      "Successfully installed googlesearch-python-1.3.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install googlesearch-python"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9efb8836",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:27.758491Z",
     "iopub.status.busy": "2025-04-19T04:53:27.758139Z",
     "iopub.status.idle": "2025-04-19T04:53:29.055284Z",
     "shell.execute_reply": "2025-04-19T04:53:29.054334Z"
    },
    "papermill": {
     "duration": 1.311282,
     "end_time": "2025-04-19T04:53:29.056873",
     "exception": false,
     "start_time": "2025-04-19T04:53:27.745591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>URL</th>\n",
       "      <th>Label</th>\n",
       "      <th>class_url</th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>@</th>\n",
       "      <th>?</th>\n",
       "      <th>-</th>\n",
       "      <th>=</th>\n",
       "      <th>...</th>\n",
       "      <th>$</th>\n",
       "      <th>!</th>\n",
       "      <th>*</th>\n",
       "      <th>,</th>\n",
       "      <th>//</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "      <th>google_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nobell.it/70ffb52d079109dca5664cce6f317373782/...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>serviciosbys.com/paypal.cgi.bin.get-into.herf....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mail.printakid.com/www.online.americanexpress....</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>thewhiskeydregs.com/wp-content/themes/widescre...</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>23.227.196.215/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>apple-checker.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>apple-iclods.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>apple-uptoday.org/</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>apple-search.info</td>\n",
       "      <td>bad</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 24 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                      URL Label  class_url  \\\n",
       "0       nobell.it/70ffb52d079109dca5664cce6f317373782/...   bad          0   \n",
       "1       dghjdgf.com/paypal.co.uk/cycgi-bin/webscrcmd=_...   bad          0   \n",
       "2       serviciosbys.com/paypal.cgi.bin.get-into.herf....   bad          0   \n",
       "3       mail.printakid.com/www.online.americanexpress....   bad          0   \n",
       "4       thewhiskeydregs.com/wp-content/themes/widescre...   bad          0   \n",
       "...                                                   ...   ...        ...   \n",
       "549341                                    23.227.196.215/   bad          0   \n",
       "549342                                 apple-checker.org/   bad          0   \n",
       "549343                                  apple-iclods.org/   bad          0   \n",
       "549344                                 apple-uptoday.org/   bad          0   \n",
       "549345                                  apple-search.info   bad          0   \n",
       "\n",
       "        url_len  abnormal_url  use_of_ip_address  @  ?  -  =  ...  $  !  *  ,  \\\n",
       "0           225             0                  0  0  1  4  4  ...  0  0  0  0   \n",
       "1            77             0                  0  0  0  2  2  ...  0  0  0  0   \n",
       "2           177             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "3            60             0                  0  0  0  0  0  ...  0  0  0  0   \n",
       "4           116             0                  0  0  1  1  0  ...  0  0  0  0   \n",
       "...         ...           ...                ... .. .. .. ..  ... .. .. .. ..   \n",
       "549341       15             0                  1  0  0  0  0  ...  0  0  0  0   \n",
       "549342       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549343       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549344       18             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "549345       17             0                  0  0  0  1  0  ...  0  0  0  0   \n",
       "\n",
       "        //  https  digits  letters  Shortining_Service  google_index  \n",
       "0        0      0      58      135                   0             1  \n",
       "1        0      0       1       62                   0             1  \n",
       "2        0      0      47      111                   0             1  \n",
       "3        0      0       0       52                   0             1  \n",
       "4        1      0      21       82                   0             1  \n",
       "...     ..    ...     ...      ...                 ...           ...  \n",
       "549341   0      0      11        0                   0             1  \n",
       "549342   0      0       0       15                   0             1  \n",
       "549343   0      0       0       14                   0             1  \n",
       "549344   0      0       0       15                   0             1  \n",
       "549345   0      0       0       15                   0             1  \n",
       "\n",
       "[549346 rows x 24 columns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from googlesearch import search\n",
    "\n",
    "# Function to check if a URL is indexed by Google\n",
    "def google_index(url: str) -> int:\n",
    "    # Search the URL on Google and retrieve the top 5 results\n",
    "    site = search(url, num_results=5)\n",
    "    return 1 if site else 0  # Return 1 if indexed, otherwise 0\n",
    "\n",
    "# Apply the function to the 'URL' column and create a new feature 'google_index'\n",
    "dataset['google_index'] = dataset['URL'].apply(google_index)\n",
    "dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "f40fc499",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.081888Z",
     "iopub.status.busy": "2025-04-19T04:53:29.081362Z",
     "iopub.status.idle": "2025-04-19T04:53:29.173462Z",
     "shell.execute_reply": "2025-04-19T04:53:29.172549Z"
    },
    "papermill": {
     "duration": 0.106406,
     "end_time": "2025-04-19T04:53:29.175163",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.068757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "URL                   0\n",
       "Label                 0\n",
       "class_url             0\n",
       "url_len               0\n",
       "abnormal_url          0\n",
       "use_of_ip_address     0\n",
       "@                     0\n",
       "?                     0\n",
       "-                     0\n",
       "=                     0\n",
       ".                     0\n",
       "#                     0\n",
       "%                     0\n",
       "+                     0\n",
       "$                     0\n",
       "!                     0\n",
       "*                     0\n",
       ",                     0\n",
       "//                    0\n",
       "https                 0\n",
       "digits                0\n",
       "letters               0\n",
       "Shortining_Service    0\n",
       "google_index          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a27dcb85",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.200182Z",
     "iopub.status.busy": "2025-04-19T04:53:29.199842Z",
     "iopub.status.idle": "2025-04-19T04:53:29.205365Z",
     "shell.execute_reply": "2025-04-19T04:53:29.204588Z"
    },
    "papermill": {
     "duration": 0.019564,
     "end_time": "2025-04-19T04:53:29.206890",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.187326",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(549346, 24)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dd598d4",
   "metadata": {
    "papermill": {
     "duration": 0.011389,
     "end_time": "2025-04-19T04:53:29.230369",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.218980",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Data Training and Testing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "36b9c534",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.255540Z",
     "iopub.status.busy": "2025-04-19T04:53:29.255198Z",
     "iopub.status.idle": "2025-04-19T04:53:29.282429Z",
     "shell.execute_reply": "2025-04-19T04:53:29.281421Z"
    },
    "papermill": {
     "duration": 0.042195,
     "end_time": "2025-04-19T04:53:29.284227",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.242032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Dropping unnecessary columns and creating feature set 'X'\n",
    "X = dataset.drop(['URL', 'Label', 'class_url', '@', '?', '-', '=', '.', '#', '%', '+', '$', '!', '*', ',', '//'], axis=1)\n",
    "\n",
    "# Target variable 'y' is the class_url column\n",
    "y = dataset['class_url']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "f04bfbaa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.310074Z",
     "iopub.status.busy": "2025-04-19T04:53:29.309731Z",
     "iopub.status.idle": "2025-04-19T04:53:29.321834Z",
     "shell.execute_reply": "2025-04-19T04:53:29.320941Z"
    },
    "papermill": {
     "duration": 0.02723,
     "end_time": "2025-04-19T04:53:29.323589",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.296359",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>url_len</th>\n",
       "      <th>abnormal_url</th>\n",
       "      <th>use_of_ip_address</th>\n",
       "      <th>https</th>\n",
       "      <th>digits</th>\n",
       "      <th>letters</th>\n",
       "      <th>Shortining_Service</th>\n",
       "      <th>google_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>225</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>58</td>\n",
       "      <td>135</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>77</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>177</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>47</td>\n",
       "      <td>111</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>52</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>116</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>21</td>\n",
       "      <td>82</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549341</th>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549342</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549343</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549344</th>\n",
       "      <td>18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549345</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>549346 rows × 8 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        url_len  abnormal_url  use_of_ip_address  https  digits  letters  \\\n",
       "0           225             0                  0      0      58      135   \n",
       "1            77             0                  0      0       1       62   \n",
       "2           177             0                  0      0      47      111   \n",
       "3            60             0                  0      0       0       52   \n",
       "4           116             0                  0      0      21       82   \n",
       "...         ...           ...                ...    ...     ...      ...   \n",
       "549341       15             0                  1      0      11        0   \n",
       "549342       18             0                  0      0       0       15   \n",
       "549343       17             0                  0      0       0       14   \n",
       "549344       18             0                  0      0       0       15   \n",
       "549345       17             0                  0      0       0       15   \n",
       "\n",
       "        Shortining_Service  google_index  \n",
       "0                        0             1  \n",
       "1                        0             1  \n",
       "2                        0             1  \n",
       "3                        0             1  \n",
       "4                        0             1  \n",
       "...                    ...           ...  \n",
       "549341                   0             1  \n",
       "549342                   0             1  \n",
       "549343                   0             1  \n",
       "549344                   0             1  \n",
       "549345                   0             1  \n",
       "\n",
       "[549346 rows x 8 columns]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "b3d41dda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.350804Z",
     "iopub.status.busy": "2025-04-19T04:53:29.349832Z",
     "iopub.status.idle": "2025-04-19T04:53:29.356966Z",
     "shell.execute_reply": "2025-04-19T04:53:29.356161Z"
    },
    "papermill": {
     "duration": 0.022662,
     "end_time": "2025-04-19T04:53:29.358384",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.335722",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         0\n",
       "1         0\n",
       "2         0\n",
       "3         0\n",
       "4         0\n",
       "         ..\n",
       "549341    0\n",
       "549342    0\n",
       "549343    0\n",
       "549344    0\n",
       "549345    0\n",
       "Name: class_url, Length: 549346, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "4dcaa82d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.384688Z",
     "iopub.status.busy": "2025-04-19T04:53:29.384325Z",
     "iopub.status.idle": "2025-04-19T04:53:29.648973Z",
     "shell.execute_reply": "2025-04-19T04:53:29.647885Z"
    },
    "papermill": {
     "duration": 0.279411,
     "end_time": "2025-04-19T04:53:29.650708",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.371297",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "# Splitting the data into training and testing sets\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=True, random_state=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "2d52998b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.676215Z",
     "iopub.status.busy": "2025-04-19T04:53:29.675873Z",
     "iopub.status.idle": "2025-04-19T04:53:29.681436Z",
     "shell.execute_reply": "2025-04-19T04:53:29.680459Z"
    },
    "papermill": {
     "duration": 0.020243,
     "end_time": "2025-04-19T04:53:29.682940",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.662697",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "X_train Shape : (439476, 8)\n",
      "Y_train Shape : (439476,)\n",
      "X_test Shape : (109870, 8)\n",
      "Y_test Shape : (109870,)\n"
     ]
    }
   ],
   "source": [
    "print(f\"X_train Shape : {X_train.shape}\")  # Shape of the training features\n",
    "print(f\"Y_train Shape : {y_train.shape}\")  # Shape of the training target variable\n",
    "print(f\"X_test Shape : {X_test.shape}\")    # Shape of the test features\n",
    "print(f\"Y_test Shape : {y_test.shape}\")    # Shape of the test target variable"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34dfd884",
   "metadata": {
    "papermill": {
     "duration": 0.011745,
     "end_time": "2025-04-19T04:53:29.706800",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.695055",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Model Developing CNN**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "74ff9cbf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:53:29.733441Z",
     "iopub.status.busy": "2025-04-19T04:53:29.733116Z",
     "iopub.status.idle": "2025-04-19T04:57:31.973666Z",
     "shell.execute_reply": "2025-04-19T04:57:31.972726Z"
    },
    "papermill": {
     "duration": 242.301032,
     "end_time": "2025-04-19T04:57:32.019929",
     "exception": false,
     "start_time": "2025-04-19T04:53:29.718897",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-04-19 04:53:31.959750: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1745038412.201239      13 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1745038412.274919      13 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-04-19 04:53:46.271798: E external/local_xla/xla/stream_executor/cuda/cuda_driver.cc:152] failed call to cuInit: INTERNAL: CUDA error: Failed call to cuInit: UNKNOWN ERROR (303)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m23s\u001b[0m 2ms/step - accuracy: 0.7573 - loss: 0.5467\n",
      "Epoch 2/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 2ms/step - accuracy: 0.7902 - loss: 0.4904\n",
      "Epoch 3/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 2ms/step - accuracy: 0.7916 - loss: 0.4853\n",
      "Epoch 4/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 2ms/step - accuracy: 0.7936 - loss: 0.4818\n",
      "Epoch 5/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m22s\u001b[0m 2ms/step - accuracy: 0.7941 - loss: 0.4802\n",
      "Epoch 6/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 2ms/step - accuracy: 0.7969 - loss: 0.4760\n",
      "Epoch 7/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 2ms/step - accuracy: 0.7986 - loss: 0.4743\n",
      "Epoch 8/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 2ms/step - accuracy: 0.7998 - loss: 0.4722\n",
      "Epoch 9/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 2ms/step - accuracy: 0.8016 - loss: 0.4694\n",
      "Epoch 10/10\n",
      "\u001b[1m13734/13734\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m21s\u001b[0m 2ms/step - accuracy: 0.8015 - loss: 0.4697\n",
      "\u001b[1m3434/3434\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 1ms/step\n",
      "CNN Accuracy: 79.51%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.31      0.47     31288\n",
      "           1       0.78      0.99      0.87     78582\n",
      "\n",
      "    accuracy                           0.80    109870\n",
      "   macro avg       0.84      0.65      0.67    109870\n",
      "weighted avg       0.82      0.80      0.76    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Conv1D, MaxPooling1D, Flatten, Dense, Input\n",
    "\n",
    "# Reshape the data for CNN input\n",
    "X_train_cnn = np.expand_dims(X_train.values, axis=2)\n",
    "X_test_cnn = np.expand_dims(X_test.values, axis=2)\n",
    "\n",
    "# Ensure correct shape: (samples, time_steps, features)\n",
    "X_train_cnn = np.array(X_train_cnn).reshape(len(X_train_cnn), -1, 1)\n",
    "X_test_cnn = np.array(X_test_cnn).reshape(len(X_test_cnn), -1, 1)\n",
    "\n",
    "# Build CNN model\n",
    "cnn = Sequential([\n",
    "    Input(shape=(X_train_cnn.shape[1], 1)),  # Correct input shape\n",
    "    Conv1D(filters=64, kernel_size=2, activation='relu'),\n",
    "    MaxPooling1D(pool_size=2),\n",
    "    Flatten(),\n",
    "    Dense(50, activation='relu'),\n",
    "    Dense(1, activation='sigmoid')\n",
    "])\n",
    "\n",
    "# Compile model\n",
    "cnn.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])\n",
    "\n",
    "# Train model\n",
    "cnn.fit(X_train_cnn, y_train, epochs=10, batch_size=32, verbose=1)\n",
    "\n",
    "# Predict probabilities\n",
    "cnn_pred = cnn.predict(X_test_cnn).ravel()\n",
    "\n",
    "# Convert probabilities to class labels\n",
    "y_pred = (cnn_pred > 0.5).astype(int)\n",
    "\n",
    "# 1. Accuracy\n",
    "accuracy = cnn.evaluate(X_test_cnn, y_test, verbose=0)\n",
    "print(f\"CNN Accuracy: {accuracy[1]:.2%}\")\n",
    "\n",
    "# 2. Confusion Matrix\n",
    "cm = confusion_matrix(y_test, y_pred)\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "            xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "            yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "plt.title('CNN Confusion Matrix')\n",
    "plt.xlabel('Predicted labels')\n",
    "plt.ylabel('True labels')\n",
    "plt.show()\n",
    "\n",
    "# 3. Classification Report\n",
    "print(\"\\nClassification Report:\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22866576",
   "metadata": {
    "papermill": {
     "duration": 0.225139,
     "end_time": "2025-04-19T04:57:32.541498",
     "exception": false,
     "start_time": "2025-04-19T04:57:32.316359",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**svm**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "6f8c0ee0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:57:33.008786Z",
     "iopub.status.busy": "2025-04-19T04:57:33.008055Z",
     "iopub.status.idle": "2025-04-19T04:58:23.018711Z",
     "shell.execute_reply": "2025-04-19T04:58:23.017779Z"
    },
    "papermill": {
     "duration": 50.30553,
     "end_time": "2025-04-19T04:58:23.089736",
     "exception": false,
     "start_time": "2025-04-19T04:57:32.784206",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM Accuracy: 73.77%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.09      0.16     31288\n",
      "           1       0.73      1.00      0.84     78582\n",
      "\n",
      "    accuracy                           0.74    109870\n",
      "   macro avg       0.83      0.54      0.50    109870\n",
      "weighted avg       0.79      0.74      0.65    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Train SVM on a smaller sample due to performance\n",
    "X_train_small = X_train[:5000]\n",
    "y_train_small = y_train[:5000]\n",
    "\n",
    "# Train SVM model\n",
    "svm = SVC(probability=True)\n",
    "svm.fit(X_train_small, y_train_small)\n",
    "\n",
    "# Predict probabilities for ensemble\n",
    "svm_pred = svm.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# Predict class labels\n",
    "y_pred = svm.predict(X_test)\n",
    "\n",
    "# Accuracy & Evaluation\n",
    "def print_results(model, X_test, y_test, model_name):\n",
    "    y_pred = model.predict(X_test)\n",
    "    acc = accuracy_score(y_test, y_pred)\n",
    "    cm = confusion_matrix(y_test, y_pred)\n",
    "    print(f\"{model_name} Accuracy: {acc:.2%}\")\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "                xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "                yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "    plt.xlabel(\"Predicted labels\")\n",
    "    plt.ylabel(\"True labels\")\n",
    "    plt.title(f\"{model_name} Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    print(\"\\nClassification Report:\")\n",
    "    print(classification_report(y_test, y_pred))\n",
    "\n",
    "# Evaluate\n",
    "print_results(svm, X_test, y_test, 'SVM')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53ce55b1",
   "metadata": {
    "papermill": {
     "duration": 0.220121,
     "end_time": "2025-04-19T04:58:23.537452",
     "exception": false,
     "start_time": "2025-04-19T04:58:23.317331",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**MLP**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f0999da4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:58:24.047245Z",
     "iopub.status.busy": "2025-04-19T04:58:24.046917Z",
     "iopub.status.idle": "2025-04-19T04:58:29.114135Z",
     "shell.execute_reply": "2025-04-19T04:58:29.112990Z"
    },
    "papermill": {
     "duration": 5.289211,
     "end_time": "2025-04-19T04:58:29.115706",
     "exception": false,
     "start_time": "2025-04-19T04:58:23.826495",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.11/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:686: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (3) reached and the optimization hasn't converged yet.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MLP Accuracy: 80.05%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.88      0.35      0.50     31288\n",
      "           1       0.79      0.98      0.88     78582\n",
      "\n",
      "    accuracy                           0.80    109870\n",
      "   macro avg       0.83      0.66      0.69    109870\n",
      "weighted avg       0.81      0.80      0.77    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.neural_network import MLPClassifier\n",
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Train MLP\n",
    "mlp = MLPClassifier(max_iter=3)\n",
    "mlp.fit(X_train, y_train)\n",
    "\n",
    "# Predict probabilities for ensemble\n",
    "mlp_pred = mlp.predict_proba(X_test)[:, 1]\n",
    "\n",
    "# Predict class labels\n",
    "y_pred = mlp.predict(X_test)\n",
    "\n",
    "# Accuracy & Evaluation\n",
    "def print_results(model, X_test, y_test, model_name):\n",
    "    y_pred = model.predict(X_test)\n",
    "    acc = accuracy_score(y_test, y_pred)\n",
    "    cm = confusion_matrix(y_test, y_pred)\n",
    "    print(f\"{model_name} Accuracy: {acc:.2%}\")\n",
    "\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "                xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "                yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "    plt.xlabel(\"Predicted labels\")\n",
    "    plt.ylabel(\"True labels\")\n",
    "    plt.title(f\"{model_name} Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    print(\"\\nClassification Report:\")\n",
    "    print(classification_report(y_test, y_pred))\n",
    "\n",
    "# Evaluate\n",
    "print_results(mlp, X_test, y_test, 'MLP')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ae5e391",
   "metadata": {
    "papermill": {
     "duration": 0.226626,
     "end_time": "2025-04-19T04:58:29.565341",
     "exception": false,
     "start_time": "2025-04-19T04:58:29.338715",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Ensemble Model**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6a732202",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-19T04:58:30.008720Z",
     "iopub.status.busy": "2025-04-19T04:58:30.008037Z",
     "iopub.status.idle": "2025-04-19T04:58:30.320023Z",
     "shell.execute_reply": "2025-04-19T04:58:30.318764Z"
    },
    "papermill": {
     "duration": 0.534021,
     "end_time": "2025-04-19T04:58:30.321593",
     "exception": false,
     "start_time": "2025-04-19T04:58:29.787572",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ensemble Model Accuracy: 78.88%\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Classification Report:\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.91      0.29      0.44     31288\n",
      "           1       0.78      0.99      0.87     78582\n",
      "\n",
      "    accuracy                           0.79    109870\n",
      "   macro avg       0.84      0.64      0.65    109870\n",
      "weighted avg       0.81      0.79      0.75    109870\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "\n",
    "# Combine predictions (averaging probabilities)\n",
    "ensemble_pred = (svm_pred + mlp_pred + cnn_pred) / 3\n",
    "\n",
    "# Convert to class labels based on threshold\n",
    "ensemble_pred_class = (ensemble_pred > 0.5).astype(int)\n",
    "\n",
    "# Function to print evaluation results\n",
    "def print_results(y_true, y_pred, model_name):\n",
    "    acc = accuracy_score(y_true, y_pred)\n",
    "    cm = confusion_matrix(y_true, y_pred)\n",
    "    print(f\"{model_name} Accuracy: {acc:.2%}\")\n",
    "\n",
    "    # Confusion Matrix\n",
    "    plt.figure(figsize=(8, 6))\n",
    "    sns.heatmap(cm, annot=True, fmt=\"d\", cmap=\"Blues\", cbar=False,\n",
    "                xticklabels=['Predicted Negative', 'Predicted Positive'],\n",
    "                yticklabels=['Actual Negative', 'Actual Positive'])\n",
    "    plt.xlabel(\"Predicted Labels\")\n",
    "    plt.ylabel(\"True Labels\")\n",
    "    plt.title(f\"{model_name} Confusion Matrix\")\n",
    "    plt.show()\n",
    "\n",
    "    # Classification Report\n",
    "    print(\"\\nClassification Report:\")\n",
    "    print(classification_report(y_true, y_pred))\n",
    "\n",
    "# Call the function for ensemble model\n",
    "print_results(y_test, ensemble_pred_class, \"Ensemble Model\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a536a11c",
   "metadata": {
    "papermill": {
     "duration": 0.293789,
     "end_time": "2025-04-19T04:58:30.843818",
     "exception": false,
     "start_time": "2025-04-19T04:58:30.550029",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 791543,
     "sourceId": 1359146,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 350.415667,
   "end_time": "2025-04-19T04:58:34.303508",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-19T04:52:43.887841",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
